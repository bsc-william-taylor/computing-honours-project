
const getKeyByValue = (object, value) => {
    for (let prop in object) {
        if (object.hasOwnProperty(prop)) {
            if (object[prop] === value) {
                return prop;
            }
        }
    }
}

exports.CL_BUILD_SUCCESS = 0;
exports.CL_DEVICE_NAME = 0x102B;

/* cl_context_properties */
exports.CL_CONTEXT_PLATFORM = 0x1084;
exports.CL_CONTEXT_INTEROP_USER_SYNC = 0x1085;

// Device Type Constants
exports.CL_DEVICE_TYPE_DEFAULT = (1 << 0);
exports.CL_DEVICE_TYPE_CPU = (1 << 1);
exports.CL_DEVICE_TYPE_GPU = (1 << 2);
exports.CL_DEVICE_TYPE_ACCELERATOR = (1 << 3);
exports.CL_DEVICE_TYPE_CUSTOM = (1 << 4);
exports.CL_DEVICE_TYPE_ALL = 0xFFFFFFFF;

// Platform Info Constants
exports.CL_PLATFORM_PROFILE = 0x0900;
exports.CL_PLATFORM_VERSION = 0x0901;
exports.CL_PLATFORM_NAME = 0x0902;
exports.CL_PLATFORM_VENDOR = 0x0903;
exports.CL_PLATFORM_EXTENSIONS = 0x0904;

// Device Info Constants
exports.CL_DEVICE_TYPE = 0x1000;
exports.CL_DEVICE_VENDOR_ID = 0x1001;
exports.CL_DEVICE_MAX_COMPUTE_UNITS = 0x1002;
exports.CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS = 0x1003;
exports.CL_DEVICE_MAX_WORK_GROUP_SIZE = 0x1004;
exports.CL_DEVICE_MAX_WORK_ITEM_SIZES = 0x1005;
exports.CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR = 0x1006;
exports.CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT = 0x1007;
exports.CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT = 0x1008;
exports.CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG = 0x1009;
exports.CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT = 0x100A;
exports.CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE = 0x100B;
exports.CL_DEVICE_MAX_CLOCK_FREQUENCY = 0x100C;
exports.CL_DEVICE_ADDRESS_BITS = 0x100D;
exports.CL_DEVICE_MAX_READ_IMAGE_ARGS = 0x100E;
exports.CL_DEVICE_MAX_WRITE_IMAGE_ARGS = 0x100F;
exports.CL_DEVICE_MAX_MEM_ALLOC_SIZE = 0x1010;
exports.CL_DEVICE_IMAGE2D_MAX_WIDTH = 0x1011;
exports.CL_DEVICE_IMAGE2D_MAX_HEIGHT = 0x1012;
exports.CL_DEVICE_IMAGE3D_MAX_WIDTH = 0x1013;
exports.CL_DEVICE_IMAGE3D_MAX_HEIGHT = 0x1014;
exports.CL_DEVICE_IMAGE3D_MAX_DEPTH = 0x1015;
exports.CL_DEVICE_IMAGE_SUPPORT = 0x1016;
exports.CL_DEVICE_MAX_PARAMETER_SIZE = 0x1017;
exports.CL_DEVICE_MAX_SAMPLERS = 0x1018;
exports.CL_DEVICE_MEM_BASE_ADDR_ALIGN = 0x1019;
exports.CL_DEVICE_MIN_DATA_TYPE_ALIGN_SIZE = 0x101A;
exports.CL_DEVICE_SINGLE_FP_CONFIG = 0x101B;
exports.CL_DEVICE_GLOBAL_MEM_CACHE_TYPE = 0x101C;
exports.CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE = 0x101D;
exports.CL_DEVICE_GLOBAL_MEM_CACHE_SIZE = 0x101E;
exports.CL_DEVICE_GLOBAL_MEM_SIZE = 0x101F;
exports.CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE = 0x1020;
exports.CL_DEVICE_MAX_CONSTANT_ARGS = 0x1021;
exports.CL_DEVICE_LOCAL_MEM_TYPE = 0x1022;
exports.CL_DEVICE_LOCAL_MEM_SIZE = 0x1023;
exports.CL_DEVICE_ERROR_CORRECTION_SUPPORT = 0x1024;
exports.CL_DEVICE_PROFILING_TIMER_RESOLUTION = 0x1025;
exports.CL_DEVICE_ENDIAN_LITTLE = 0x1026;
exports.CL_DEVICE_AVAILABLE = 0x1027;
exports.CL_DEVICE_COMPILER_AVAILABLE = 0x1028;
exports.CL_DEVICE_EXECUTION_CAPABILITIES = 0x1029;
exports.CL_DEVICE_QUEUE_PROPERTIES = 0x102A;    /* deprecated */
exports.CL_DEVICE_QUEUE_ON_HOST_PROPERTIES = 0x102A;
exports.CL_DEVICE_NAME = 0x102B;
exports.CL_DEVICE_VENDOR = 0x102C;
exports.CL_DRIVER_VERSION = 0x102D;
exports.CL_DEVICE_PROFILE = 0x102E;
exports.CL_DEVICE_VERSION = 0x102F;
exports.CL_DEVICE_EXTENSIONS = 0x1030;
exports.CL_DEVICE_PLATFORM = 0x1031;
exports.CL_DEVICE_DOUBLE_FP_CONFIG = 0x1032;
/* 0x1033 reserved for CL_DEVICE_HALF_FP_CONFIG */
exports.CL_DEVICE_PREFERRED_VECTOR_WIDTH_HALF = 0x1034;
exports.CL_DEVICE_HOST_UNIFIED_MEMORY = 0x1035;   /* deprecated */
exports.CL_DEVICE_NATIVE_VECTOR_WIDTH_CHAR = 0x1036;
exports.CL_DEVICE_NATIVE_VECTOR_WIDTH_SHORT = 0x1037;
exports.CL_DEVICE_NATIVE_VECTOR_WIDTH_INT = 0x1038;
exports.CL_DEVICE_NATIVE_VECTOR_WIDTH_LONG = 0x1039;
exports.CL_DEVICE_NATIVE_VECTOR_WIDTH_FLOAT = 0x103A;
exports.CL_DEVICE_NATIVE_VECTOR_WIDTH_DOUBLE = 0x103B;
exports.CL_DEVICE_NATIVE_VECTOR_WIDTH_HALF = 0x103C;
exports.CL_DEVICE_OPENCL_C_VERSION = 0x103D;
exports.CL_DEVICE_LINKER_AVAILABLE = 0x103E;
exports.CL_DEVICE_BUILT_IN_KERNELS = 0x103F;
exports.CL_DEVICE_IMAGE_MAX_BUFFER_SIZE = 0x1040;
exports.CL_DEVICE_IMAGE_MAX_ARRAY_SIZE = 0x1041;
exports.CL_DEVICE_PARENT_DEVICE = 0x1042;
exports.CL_DEVICE_PARTITION_MAX_SUB_DEVICES = 0x1043;
exports.CL_DEVICE_PARTITION_PROPERTIES = 0x1044;
exports.CL_DEVICE_PARTITION_AFFINITY_DOMAIN = 0x1045;
exports.CL_DEVICE_PARTITION_TYPE = 0x1046;
exports.CL_DEVICE_REFERENCE_COUNT = 0x1047;
exports.CL_DEVICE_PREFERRED_INTEROP_USER_SYNC = 0x1048;
exports.CL_DEVICE_PRINTF_BUFFER_SIZE = 0x1049;
exports.CL_DEVICE_IMAGE_PITCH_ALIGNMENT = 0x104A;
exports.CL_DEVICE_IMAGE_BASE_ADDRESS_ALIGNMENT = 0x104B;
exports.CL_DEVICE_MAX_READ_WRITE_IMAGE_ARGS = 0x104C;
exports.CL_DEVICE_MAX_GLOBAL_VARIABLE_SIZE = 0x104D;
exports.CL_DEVICE_QUEUE_ON_DEVICE_PROPERTIES = 0x104E;
exports.CL_DEVICE_QUEUE_ON_DEVICE_PREFERRED_SIZE = 0x104F;
exports.CL_DEVICE_QUEUE_ON_DEVICE_MAX_SIZE = 0x1050;
exports.CL_DEVICE_MAX_ON_DEVICE_QUEUES = 0x1051;
exports.CL_DEVICE_MAX_ON_DEVICE_EVENTS = 0x1052;
exports.CL_DEVICE_SVM_CAPABILITIES = 0x1053;
exports.CL_DEVICE_GLOBAL_VARIABLE_PREFERRED_TOTAL_SIZE = 0x1054;
exports.CL_DEVICE_MAX_PIPE_ARGS = 0x1055;
exports.CL_DEVICE_PIPE_MAX_ACTIVE_RESERVATIONS = 0x1056;
exports.CL_DEVICE_PIPE_MAX_PACKET_SIZE = 0x1057;
exports.CL_DEVICE_PREFERRED_PLATFORM_ATOMIC_ALIGNMENT = 0x1058;
exports.CL_DEVICE_PREFERRED_GLOBAL_ATOMIC_ALIGNMENT = 0x1059;
exports.CL_DEVICE_PREFERRED_LOCAL_ATOMIC_ALIGNMENT = 0x105A;

exports.clCreateContextFromType = raster.createContextFromType;
exports.clReleaseContext = raster.releaseContext;
exports.clGetPlatformIDs = raster.getPlatformIDs;
exports.clGetDeviceIDs = raster.getDeviceIDs;

exports.clGetPlatformInfo = function(platform, info) {
    raster.getPlatformInfo(platform, info);

    const keyName = getKeyByValue(exports, info);
    const value = platform.info;

    delete platform.info;
    platform[keyName] = value;
};

exports.clGetDeviceInfo = (device, info) => {
    raster.getDeviceInfo(device, info);

    const keyName = getKeyByValue(exports, info);
    const value = device.info;

    delete device.info;
    device[keyName] = value;
};

